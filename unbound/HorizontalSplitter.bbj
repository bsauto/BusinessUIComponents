use ::BBjWidget/BBjWidget.bbj::BBjWidget

rem /**
rem  * A sample BBj Widget Implementation
rem  */
class public HorizontalSplitter extends BBjWidget

    field private BBjButton         btnClick!
    field private BBjNumber         clickCount
    
    field private BBjNumber         W
    field private BBjNumber         H
    field private BBjChildWindow    CwTop!
    field private BBjChildWindow    CwBottom!
    field private BBjControl        UiwTop!
    field private BBjControl        UiwBottom!
    
    field private BBjStaticText     Split!
    field private BBjNumber         SplitPos
    field private BBjNumber         dragging=0    
    
    rem sysgui scale
    field private BBjNumber         m_sgscaleX=0
    field private BBjNumber         m_sgscaleY=0
    field private BBjNumber         m_orientation=0
    field private BBjNumber         m_lastCursorValue=0
    field private BBjNumber         m_lastOrientationValue=0
    
    rem --------------------- constructors -------------------------------------
    
    rem /**
    rem  * disabled default constructor
    rem  */
    method private HorizontalSplitter()
    methodend

    rem /**
    rem  * The constructor that creates the widget on wnd!
    rem * @param BBjWindow wnd!: parent window
    rem * @param BBjInt id: the control ID
    rem * @param BBjInt x: x-location
    rem * @param BBjInt y: y-location
    rem * @param BBjInt w: width
    rem * @param BBjInt h: height
    rem */
    method public HorizontalSplitter(BBjWindow wnd!, BBjInt id!, BBjInt x!, BBjInt y!, BBjInt w!, BBjInt h!)
        #super!.create(wnd!,id!,x!,y!,w!,h!)
    methodend
    
    rem --------------------- event constant(s) -------------------------------------
    

    rem ---------------------- methods from BBjWidget -------------------------------- 

    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        if (f_init!) then

            #W = #getWidth()
            #H = #getHeight()
            
            #SplitPos = int((#H-8)/2)
            #CwTop!     = #getCanvas().addChildWindow(100,0,0,#W,#SplitPos-4-20,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
            #CwBottom!  = #getCanvas().addChildWindow(101,0,#SplitPos+2,#W,#H-#SplitPos-4,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
    
            #Split!     = #getCanvas().addStaticText(200,0,#SplitPos-2,#W,4,"")
            
            #Split!.setCursor(8)
            #m_lastCursorValue=8
            #Split!.setBackColor(BBjAPI().makeColor("LTGRAY"))
            
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onSplitMouseDown")
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_UP,#this!,"onSplitMouseUp")
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_MOVE,#this!,"onSplitMouseMove")
        FI
        

        
    methodend

    method public BBjChildWindow getTopCanvas()
    
        methodret #CwTop!
        
    methodend

    method public BBjChildWindow getBottomCanvas()
    
        methodret #CwBottom!
        
    methodend
    
    method public void setTopCtrl(BBjControl uiw!)
        
            #UiwTop! = uiw!
            #delayedResize(null())
            
    methodend

    method public void setBottomCtrl(BBjControl uiw!)
        
            #UiwBottom! = uiw!
            #delayedResize(null())
            
    methodend
    
    method public void setSize(BBjNumber w!, BBjNumber h!)
        #super!.setSize(w!,h!)

        BBjAPI().removeTimer("delay",err=*next)
        
        ratio = #SplitPos/#H
    
        #H = h!
        #W = w!
        #SplitPos = int(#H*ratio)
        
        
        BBjAPI().createTimer("delay", .01, #this!, "delayedResize")
            
    methodend
    
    method public void delayedResize(BBjTimerEvent ev!)
    
        BBjAPI().removeTimer("delay",err=*next)
        
        #getCanvas().setSize(#W,#H)
        
        
        switch #m_orientation
        case HorizontalSplitter.SPLITTER_ORIENTATION_HORIZONTAL()
        
              #CwTop!.setSize(#W,#SplitPos)
              #CwBottom!.setLocation(0,#SplitPos+4)
              #CwBottom!.setSize(#W,#H-#SplitPos)
          
              if #UiwTop! <> null() then
                  #UiwTop!.setSize(#W,#SplitPos)
              fi
      
              if #UiwBottom! <> null() then
      
                  #UiwBottom!.setSize(#W,#H-#SplitPos-4)
              fi
          
              #Split!.setLocation(0,#SplitPos)
              #Split!.setSize(#W,4)
              
              break
              
        case HorizontalSplitter.SPLITTER_ORIENTATION_VERTICAL()
        
            
          
            #CwTop!.setSize(#SplitPos,#H)
            #CwTop!.setLocation(0,0)
            
            bx=#SplitPos+4
            by=0
            bw=#W-#SplitPos-4
            bh=#H
            #CwBottom!.setSize(bw,bh)
            #CwBottom!.setLocation(bx,by)
        
            if #UiwBottom! <> null() then
               tx=0
               ty=0
               tw=bw
               th=bh               
               rem print "TX=",tx," TY=",ty
               rem print "TW=",tw," TH=",th
               #UiwBottom!.setLocation(tx,ty)
               #UiwBottom!.setSize(tw,th)
               
            fi
    
            if #UiwTop! <> null() then
               bx1=0
               by1=0
               bw1=#SplitPos
               bh1=#H
               #UiwTop!.setLocation(bx1,by1)
               #UiwTop!.setSize(bw1,bh1)
            fi
        
            #Split!.setLocation(#SplitPos,0)
            #Split!.setSize(4,#H)
        
            break
            
        swend
        
        
        switch #m_orientation
        case 0
            if #m_lastCursorValue<>8 #Split!.setCursor(8);#m_lastCursorValue=8
            break
        case 1
            if #m_lastCursorValue<>32644 #Split!.setCursor(32644);#m_lastCursorValue=32644
            break
        swend
    
    methodend
    
    method public void onSplitMouseDown(BBjMouseDownEvent ev!)
        mc=ev!.getMouseButton()
        if mc<>1 methodret
        
        #dragging=1
        #CwBottom!.setEnabled(0)
        #CwTop!.setEnabled(0)

        BBjAPI().removeTimer("delay",err=*next)
    methodend
    
    method public void onSplitMouseUp(BBjMouseUpEvent ev!)
        #dragging=0
        #CwBottom!.setEnabled(1)
        #CwTop!.setEnabled(1)
        
        BBjAPI().createTimer("delay", .5, #this!, "delayedResize")
    methodend    

    method public void onSplitMouseMove(BBjMouseMoveEvent ev!)
    
        rem nothing to do
        if #dragging=0 methodret
    
        rem get scale (needed in BUI because mouseevent reports unscaled X and Y pos)
        if #m_sgscaleX=0
            #m_sgscaleX=bbjapi().getSysGui().getScaleX()
            #m_sgscaleY=bbjapi().getSysGui().getScaleY()
        fi
        rem #m_sgscaleX=1
        rem #m_sgscaleY=1
        
        switch #m_orientation
        
        case HorizontalSplitter.SPLITTER_ORIENTATION_HORIZONTAL()
        
            #SplitPos = min(ev!.getY())
            #SplitPos=int(#SplitPos*1/#m_sgscaleX)
            #Split!.setLocation(0,#SplitPos)
            break
            
        case HorizontalSplitter.SPLITTER_ORIENTATION_VERTICAL()
            #SplitPos = min(ev!.getX())
            #SplitPos=int(#SplitPos*1/#m_sgscaleY)
            #Split!.setLocation(#SplitPos,0)
            break
        swend
        
        
        
    methodend  
    
    rem change the orientation
    method public void setOrientation(BBjNumber p_Orientation)
        #m_orientation=p_Orientation
        
        rem maybe use timer for redraw when more setters are added so redraw is not called repeatedly
        if p_Orientation<>#m_lastOrientationValue
            rem force redraw
            rem #redraw(BBjapi().FALSE)
            #setSize(#W,#H)
        fi
        
        #m_lastOrientationValue=p_Orientation
        
    methodend
    
    
    rem constant values
    method public static BBjNumber SPLITTER_ORIENTATION_HORIZONTAL()
        methodret 0
    methodend
    
    method public static BBjNumber SPLITTER_ORIENTATION_VERTICAL()
        methodret 1
    methodend


classend



if info(3,2)<>"roth" ? 'HIDE'

wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,900,600,"Spliiter Demo")
bbjapi().getSysGui().setScale(1.2,1.2)
wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

splitter! = new HorizontalSplitter(wnd!,100,0,0,900,600)

topbtn! = splitter!.getTopCanvas().addButton(100,0,0,200,200,"OBEN")
splitter!.setTopCtrl(topbtn!)

botbtn! = splitter!.getBottomCanvas().addButton(100,0,0,200,200,"UNTEN")
splitter!.setBottomCtrl(botbtn!)
rem splitter!.setOrientation(splitter!.SPLITTER_ORIENTATION_VERTICAL())

process_events

resize:
  ev! = BBjAPI().getLastEvent()
  splitter!.setSize(ev!.getWidth(),ev!.getHeight())
return

byebye:
    bye